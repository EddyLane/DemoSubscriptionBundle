imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    test: ~
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: false
    form:
        csrf_protection:
            enabled: false
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

jms_serializer:
    metadata:
        directories:
            FOSUB:
                namespace_prefix: "FOS\\UserBundle"
                path: "%kernel.root_dir%/serializer/FOSUB"
            FRIDGESB:
                namespace_prefix: "Fridge\\SubscriptionBundle"
                path: "%kernel.root_dir%/serializer/FRIDGESB"

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Fridge\UserBundle\Entity\User
    group:
        group_class: Fridge\UserBundle\Entity\Group

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations:  true }

fridge_subscription:
    user_class: Fridge\UserBundle\Entity\User
    stripe_sk: "%stripe_test_secret_key%"
    enable_listeners: true

nelmio_cors:
    defaults:
        allow_credentials: true
        allow_origin: ['*']
        allow_headers: ['*']
        allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
        expose_headers: ['accept', 'content-type']
        max_age: 3600
    paths:
        '^/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE', 'OPTIONS']
            max_age: 3600

fos_oauth_server:
    db_driver: orm       # Driver availables: orm, mongodb, or propel
    client_class:        Fridge\ApiBundle\Entity\Client
    access_token_class:  Fridge\ApiBundle\Entity\AccessToken
    refresh_token_class: Fridge\ApiBundle\Entity\RefreshToken
    auth_code_class:     Fridge\ApiBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_manager

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        view_response_listener: 'force'
    routing_loader:
        default_format:       json
        include_format:       false
    access_denied_listener:
        # all requests using the 'json' format will return a 403 on an access denied violation
        json: false
    exception:
        codes:
            'Fridge\SubscriptionBundle\Exception\NoCardsException': 403
            'Fridge\SubscriptionBundle\Exception\FridgeCardDeclinedException': 402
            'Fridge\SubscriptionBundle\Exception\InvalidTokenException': 402
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Symfony\Component\Security\Core\Exception\AccessDeniedException': 403
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
        messages:
            'Symfony\Component\HttpKernel\Exception\HttpException': true
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true

old_sound_rabbit_mq:
    connections:
        default:
            host:     'localhost'
            port:     5672
            user:     'guest'
            password: 'guest'
            vhost:    '/'
            lazy:     true
    producers:
        refresh_podcast:
            connection:       default
            exchange_options: { name: 'file_nodes', type: direct }
    consumers:
        read_node:
            connection:       default
            exchange_options: { name: 'file_nodes', type: direct }
            queue_options:    { name: 'file_nodes' }
            callback:         fridge.firebase.consumer.read_node
